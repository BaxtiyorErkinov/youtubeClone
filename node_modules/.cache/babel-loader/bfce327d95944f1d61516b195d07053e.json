{"ast":null,"code":"var _jsxFileName = \"/home/baxa/Documents/react/youtube_clone/src/components/VideoDetail/VideoDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, Button, Avatar } from \"@mui/material\";\nimport \"./VideoDetail.scss\"; // https://youtube.googleapis.com/youtube/v3/videos?part=snippet&id=hmXTBjM0is4&key=[YOUR_API_KEY]\n// https://youtube.googleapis.com/youtube/v3/channels?part=snippet&id=UCBa659QWEk1AI4Tg--mrJ2A&key=[YOUR_API_KEY]      channel\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VideoDetail() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState([]);\n  const [subscribe, setSubscribe] = useState(false);\n  const [channel, setChannel] = useState([]);\n\n  let randomColor = require(\"randomcolor\");\n\n  let color = randomColor({\n    count: 10,\n    hue: \"red\"\n  });\n  const chId = data.map(item => item.snippet.channelId);\n  const text = chId.toString();\n  useEffect(() => {\n    axios.get(`https://youtube.googleapis.com/youtube/v3/videos?part=snippet`, {\n      params: {\n        id: id,\n        key: \"AIzaSyCeQDuZBJ00R2kC0cqvxWX86ZcVfpB7HVY\"\n      }\n    }).then(res => {\n      setData(res.data.items);\n    }).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    axios.get(`https://youtube.googleapis.com/youtube/v3/channels`, {\n      params: {\n        id: text,\n        key: \"AIzaSyCeQDuZBJ00R2kC0cqvxWX86ZcVfpB7HVY\"\n      }\n    }).then(res => setChannel(res.data.items));\n  }, []);\n  console.log(chId);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      p: 3,\n      children: [data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"100%\",\n              height: \"494\",\n              src: `https://www.youtube.com/embed/${id}`,\n              title: \"YouTube video player\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"logo\",\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      backgroundColor: color,\n                      width: \"40px\",\n                      height: \"40px\"\n                    },\n                    children: item.snippet.channelTitle.slice(0, 1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"title\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: item.snippet.channelTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subscribe__btn\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => setSubscribe(!subscribe),\n                  color: subscribe ? \"inherit\" : \"error\",\n                  variant: \"contained\",\n                  children: subscribe ? \"You are subscribed\" : \"SUBSCRIBE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(VideoDetail, \"BbbTNoZtwKYz7NTkGN4Y22DKc+k=\", false, function () {\n  return [useParams];\n});\n\n_c = VideoDetail;\nexport default VideoDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoDetail\");","map":{"version":3,"sources":["/home/baxa/Documents/react/youtube_clone/src/components/VideoDetail/VideoDetail.js"],"names":["React","useState","useEffect","axios","useParams","Grid","Button","Avatar","VideoDetail","id","data","setData","subscribe","setSubscribe","channel","setChannel","randomColor","require","color","count","hue","chId","map","item","snippet","channelId","text","toString","get","params","key","then","res","items","catch","err","console","log","backgroundColor","width","height","channelTitle","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,eAArC;AACA,OAAO,oBAAP,C,CAEA;AACA;;;;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;;AACA,MAAIe,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAIC,KAAK,GAAGF,WAAW,CAAC;AAAEG,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,GAAG,EAAE;AAAlB,GAAD,CAAvB;AACA,QAAMC,IAAI,GAAGX,IAAI,CAACY,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACC,OAAL,CAAaC,SAAhC,CAAb;AACA,QAAMC,IAAI,GAAGL,IAAI,CAACM,QAAL,EAAb;AACAzB,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFyB,GADH,CACQ,+DADR,EACwE;AACpEC,MAAAA,MAAM,EAAE;AACNpB,QAAAA,EAAE,EAAEA,EADE;AAENqB,QAAAA,GAAG,EAAE;AAFC;AAD4D,KADxE,EAOGC,IAPH,CAOSC,GAAD,IAAS;AACbrB,MAAAA,OAAO,CAACqB,GAAG,CAACtB,IAAJ,CAASuB,KAAV,CAAP;AACD,KATH,EAUGC,KAVH,CAUUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAWD,GAZQ,EAYN,EAZM,CAAT;AAcAjC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACyB,GAAN,CAAW,oDAAX,EAAgE;AAC9DC,MAAAA,MAAM,EAAE;AACNpB,QAAAA,EAAE,EAAEiB,IADE;AAENI,QAAAA,GAAG,EAAE;AAFC;AADsD,KAAhE,EAKGC,IALH,CAKSC,GAAD,IAASjB,UAAU,CAACiB,GAAG,CAACtB,IAAJ,CAASuB,KAAV,CAL3B;AAMD,GAPQ,EAON,EAPM,CAAT;AAQAG,EAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAY3B,IAAZ;AACA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,CAAC,EAAE,CAA/B;AAAA,iBACGA,IAAI,CAACY,GAAL,CAAUC,IAAD,iBACR,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,MAAM,EAAC,KAFT;AAGE,cAAA,GAAG,EAAG,iCAAgCd,EAAG,EAH3C;AAIE,cAAA,KAAK,EAAC,sBAJR;AAKE,cAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,MAAf;AAAA,yCACA,QAAC,MAAD;AAAQ,oBAAA,EAAE,EAAE;AAAE6B,sBAAAA,eAAe,EAAEpB,KAAnB;AAA0BqB,sBAAAA,KAAK,EAAE,MAAjC;AAAyCC,sBAAAA,MAAM,EAAE;AAAjD,qBAAZ;AAAA,8BACCjB,IAAI,CAACC,OAAL,CAAaiB,YAAb,CAA0BC,KAA1B,CAAgC,CAAhC,EAAmC,CAAnC;AADD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,wBADF,eAMG;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA,yCAAuB;AAAA,8BAAInB,IAAI,CAACC,OAAL,CAAaiB;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA,wBANH;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eASE;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAA,uCACE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAE,MAAM5B,YAAY,CAAC,CAACD,SAAF,CAD7B;AAEE,kBAAA,KAAK,EAAEA,SAAS,GAAG,SAAH,GAAe,OAFjC;AAGE,kBAAA,OAAO,EAAC,WAHV;AAAA,4BAKGA,SAAS,GAAG,oBAAH,GAA0B;AALtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eAqCE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,cArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2CD;;GA5EQJ,W;UACQJ,S;;;KADRI,W;AA8ET,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, Button, Avatar } from \"@mui/material\";\nimport \"./VideoDetail.scss\";\n\n// https://youtube.googleapis.com/youtube/v3/videos?part=snippet&id=hmXTBjM0is4&key=[YOUR_API_KEY]\n// https://youtube.googleapis.com/youtube/v3/channels?part=snippet&id=UCBa659QWEk1AI4Tg--mrJ2A&key=[YOUR_API_KEY]      channel\nfunction VideoDetail() {\n  const { id } = useParams();\n  const [data, setData] = useState([]);\n  const [subscribe, setSubscribe] = useState(false)\n  const [channel, setChannel] = useState([])\n  let randomColor = require(\"randomcolor\"); \n  let color = randomColor({ count: 10, hue: \"red\" });\n  const chId = data.map((item) => item.snippet.channelId);\n  const text = chId.toString()\n  useEffect(() => {\n    axios\n      .get(`https://youtube.googleapis.com/youtube/v3/videos?part=snippet`, {\n        params: {\n          id: id,\n          key: \"AIzaSyCeQDuZBJ00R2kC0cqvxWX86ZcVfpB7HVY\",\n        },\n      })\n      .then((res) => {\n        setData(res.data.items);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    axios.get(`https://youtube.googleapis.com/youtube/v3/channels`, {\n      params: {\n        id: text,\n        key: \"AIzaSyCeQDuZBJ00R2kC0cqvxWX86ZcVfpB7HVY\"\n      }\n    }).then((res) => setChannel(res.data.items))\n  }, [])\n  console.log(chId)\n  console.log(data);\n  return (\n    <>\n      <Grid container spacing={2} p={3}>\n        {data.map((item) => (\n          <Grid item xs={8}>\n            <Grid container>\n              <Grid item xs={12}>\n                <iframe\n                  width=\"100%\"\n                  height=\"494\"\n                  src={`https://www.youtube.com/embed/${id}`}\n                  title=\"YouTube video player\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;\"\n                ></iframe>\n              </Grid>\n              <Grid item xs={12}>\n                <div className=\"container\">\n                  <div className=\"info\">\n                    <div className=\"logo\">\n                    <Avatar sx={{ backgroundColor: color, width: \"40px\", height: \"40px\" }}>\n                    {item.snippet.channelTitle.slice(0, 1)}\n                    </Avatar>\n                    </div>\n                     <div className=\"title\"><p>{item.snippet.channelTitle}</p></div>\n                  </div>\n                  <div className=\"subscribe__btn\">\n                    <Button\n                      onClick={() => setSubscribe(!subscribe)}\n                      color={subscribe ? \"inherit\" : \"error\"}\n                      variant=\"contained\"\n                    >\n                      {subscribe ? \"You are subscribed\" : \"SUBSCRIBE\"}\n                    </Button>\n                  </div>\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        ))}\n        <Grid item xs={4}></Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default VideoDetail;\n"]},"metadata":{},"sourceType":"module"}