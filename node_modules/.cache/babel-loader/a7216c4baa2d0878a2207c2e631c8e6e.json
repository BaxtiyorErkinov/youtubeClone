{"ast":null,"code":"var _jsxFileName = \"/home/baxa/Documents/react/youtube_clone/src/components/VideoDetail/VideoDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, Button, Avatar } from \"@mui/material\"; // https://youtube.googleapis.com/youtube/v3/videos?part=snippet&id=hmXTBjM0is4&key=[YOUR_API_KEY]\n// https://youtube.googleapis.com/youtube/v3/channels?part=snippet&id=UCBa659QWEk1AI4Tg--mrJ2A&key=[YOUR_API_KEY]      channel\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction VideoDetail() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [subscribe, setSubscribe] = useState(false);\n  const [data, setData] = useState([]);\n  const [channel, setChannel] = useState([]);\n  useEffect(async () => {\n    await axios.get(`https://youtube.googleapis.com/youtube/v3/videos?part=snippet&id=hmXTBjM0is4`, {\n      params: {\n        key: \"AIzaSyCeQDuZBJ00R2kC0cqvxWX86ZcVfpB7HVY\"\n      }\n    }).then(res => setData(res.data.items[0]));\n  }, []);\n  useEffect(async () => {\n    await axios.get(`https://youtube.googleapis.com/youtube/v3/channels?part=snippet`, {\n      params: {\n        id: `${data.snippet.channelId}`,\n        key: \"AIzaSyCeQDuZBJ00R2kC0cqvxWX86ZcVfpB7HVY\"\n      }\n    }).then(res => setData(res.data.items[0]));\n  }, []);\n  console.log(data);\n  console.log(channel);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      p: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"100%\",\n              height: \"494\",\n              src: `https://www.youtube.com/embed/${id}`,\n              title: \"YouTube video player\",\n              frameborder: \"0\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;\",\n              allowfullscreen: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subscribe__btn\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => setSubscribe(!subscribe),\n                  color: subscribe ? \"inherit\" : \"error\",\n                  variant: \"contained\",\n                  children: subscribe ? \"You are subscribed\" : \"SUBSCRIBE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(VideoDetail, \"2cDjK4GJFADXD0B4k84Fqr1KKts=\", false, function () {\n  return [useParams];\n});\n\n_c = VideoDetail;\nexport default VideoDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoDetail\");","map":{"version":3,"sources":["/home/baxa/Documents/react/youtube_clone/src/components/VideoDetail/VideoDetail.js"],"names":["React","useState","useEffect","axios","useParams","Grid","Button","Avatar","VideoDetail","id","subscribe","setSubscribe","data","setData","channel","setChannel","get","params","key","then","res","items","snippet","channelId","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, Button, Avatar } from \"@mui/material\";\n\n// https://youtube.googleapis.com/youtube/v3/videos?part=snippet&id=hmXTBjM0is4&key=[YOUR_API_KEY]\n// https://youtube.googleapis.com/youtube/v3/channels?part=snippet&id=UCBa659QWEk1AI4Tg--mrJ2A&key=[YOUR_API_KEY]      channel\nfunction VideoDetail() {\n  const { id } = useParams();\n  const [subscribe, setSubscribe] = useState(false);\n  const [data, setData] = useState([]);\n  const [channel, setChannel] = useState([])\n\n  useEffect(async () => {\n  await  axios\n      .get(\n        `https://youtube.googleapis.com/youtube/v3/videos?part=snippet&id=hmXTBjM0is4`,\n        {\n          params: {\n            key: \"AIzaSyCeQDuZBJ00R2kC0cqvxWX86ZcVfpB7HVY\",\n          },\n        }\n      )\n      .then((res) => setData(res.data.items[0]));\n  }, []);\n\n  useEffect( async () => {\n    await axios\n      .get(`https://youtube.googleapis.com/youtube/v3/channels?part=snippet`, {\n        params: {\n          id: `${data.snippet.channelId}`,\n          key: \"AIzaSyCeQDuZBJ00R2kC0cqvxWX86ZcVfpB7HVY\",\n        },\n      })\n      .then((res) => setData(res.data.items[0]));\n  }, []);\n  console.log(data);\n  console.log(channel)\n  return (\n    <>\n      <Grid container spacing={2} p={3}>\n        <Grid item xs={8}>\n          <Grid container>\n            <Grid item xs={12}>\n              <iframe\n                width=\"100%\"\n                height=\"494\"\n                src={`https://www.youtube.com/embed/${id}`}\n                title=\"YouTube video player\"\n                frameborder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;\"\n                allowfullscreen=\"true\"\n              ></iframe>\n            </Grid>\n            <Grid item xs={12}>\n              <div className=\"container\">\n                <div className=\"avatar\"></div>\n                <div className=\"subscribe__btn\">\n                  <Button\n                    onClick={() => setSubscribe(!subscribe)}\n                    color={subscribe ? \"inherit\" : \"error\"}\n                    variant=\"contained\"\n                  >\n                    {subscribe ? \"You are subscribed\" : \"SUBSCRIBE\"}\n                  </Button>\n                </div>\n              </div>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={4}></Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default VideoDetail;\n"]},"metadata":{},"sourceType":"module"}