{"ast":null,"code":"var _jsxFileName = \"/home/baxa/Documents/react/youtube_clone/src/components/VideoDetail/VideoDetailChannel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Button, Avatar } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VideoDetailChannel(_ref) {\n  _s();\n\n  let {\n    idOfChannel\n  } = _ref;\n  const [subscribe, setSubscribe] = useState(false);\n  const [channel, setChannel] = useState();\n\n  const fetchChannel = id => {\n    axios.get(`  'https://youtube.googleapis.com/youtube/v3/channels?part=snippet&id=${id}&key=AIzaSyCeQDuZBJ00R2kC0cqvxWX86ZcVfpB7HVY'`, {\n      params: {// part: \"snippet\",\n        // id: id,\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setChannel(res.data.items[0].snippet);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  console.log(channel);\n  useEffect(() => {\n    fetchChannel(idOfChannel);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(Avatar // src={channel.snippet.thumbnails.medium.url}\n        , {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subscribe__btn\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setSubscribe(!subscribe),\n        color: subscribe ? \"inherit\" : \"error\",\n        variant: \"contained\",\n        children: subscribe ? \"You are subscribed\" : \"SUBSCRIBE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoDetailChannel, \"b/4bFYgbsiTvqcQyBI4L8vXtgBM=\");\n\n_c = VideoDetailChannel;\nexport default VideoDetailChannel;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoDetailChannel\");","map":{"version":3,"sources":["/home/baxa/Documents/react/youtube_clone/src/components/VideoDetail/VideoDetailChannel.js"],"names":["React","useState","useEffect","axios","Button","Avatar","VideoDetailChannel","idOfChannel","subscribe","setSubscribe","channel","setChannel","fetchChannel","id","get","params","then","res","status","data","items","snippet","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,eAA/B;;;AAEA,SAASC,kBAAT,OAA2C;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;;AAEA,QAAMW,YAAY,GAAIC,EAAD,IAAQ;AAC3BV,IAAAA,KAAK,CACAW,GADL,CACU,yEAAwED,EAAG,+CADrF,EACqI;AAC/HE,MAAAA,MAAM,EAAE,CACN;AACA;AAFM;AADuH,KADrI,EAOKC,IAPL,CAOWC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBP,QAAAA,UAAU,CAACM,GAAG,CAACE,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,OAAnB,CAAV;AACD;AACF,KAXL,EAYKC,KAZL,CAYYC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZpB;AAaD,GAdD;;AAeAC,EAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACL,WAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,MAAD,CACA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAME,YAAY,CAAC,CAACD,SAAF,CAD7B;AAEE,QAAA,KAAK,EAAEA,SAAS,GAAG,SAAH,GAAe,OAFjC;AAGE,QAAA,OAAO,EAAC,WAHV;AAAA,kBAKGA,SAAS,GAAG,oBAAH,GAA0B;AALtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA9CQF,kB;;KAAAA,kB;AAgDT,eAAeA,kBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Button, Avatar } from \"@mui/material\";\n\nfunction VideoDetailChannel({idOfChannel}) {\n  const [subscribe, setSubscribe] = useState(false);\n  const [channel, setChannel] = useState();\n\n  const fetchChannel = (id) => {\n    axios\n        .get(`  'https://youtube.googleapis.com/youtube/v3/channels?part=snippet&id=${id}&key=AIzaSyCeQDuZBJ00R2kC0cqvxWX86ZcVfpB7HVY'`, {\n          params: {\n            // part: \"snippet\",\n            // id: id,\n          },\n        })\n        .then((res) => {\n          if (res.status === 200) {\n            setChannel(res.data.items[0].snippet);\n          }\n        })\n        .catch((err) => console.log(err));\n  };\n  console.log(channel)\n  useEffect(() => {\n    fetchChannel(idOfChannel)\n  }, [])\n  return (\n    <div className=\"container\">\n      <div className=\"info\">\n        <div className=\"logo\">\n          <Avatar\n          // src={channel.snippet.thumbnails.medium.url}\n          />\n        </div>\n        <div className=\"title\">\n          {/* <p>{channel.title}</p> */}\n        </div>\n      </div>\n      <div className=\"subscribe__btn\">\n        <Button\n          onClick={() => setSubscribe(!subscribe)}\n          color={subscribe ? \"inherit\" : \"error\"}\n          variant=\"contained\"\n        >\n          {subscribe ? \"You are subscribed\" : \"SUBSCRIBE\"}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default VideoDetailChannel;\n"]},"metadata":{},"sourceType":"module"}